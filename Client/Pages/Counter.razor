@page "/counter"
@inject HttpClient Http

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>
<p role="status">Message from leader: @_messageFromLeader</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<button class="btn btn-primary" @onclick="MessageTheLeader">Click me</button>

@code {
    private int currentCount = 0;
    private string _messageFromLeader = "<no message>";

    private void IncrementCount()
    {
        currentCount++;
    }

    private async Task MessageTheLeader()
    {
        _messageFromLeader = "Talking to leader";

        _messageFromLeader = await Http.GetStringAsync("/api/HelloLeader");
    }
}

<FileSelect @ref="fileSelect" FilesSelected="FilesSelectedHandler"></FileSelect>

<button @onclick="SelectFiles">Select Files</button>

@code 
{
    // Component reference
    FileSelect fileSelect;
    
    void SelectFiles() =>
        fileSelect.SelectFiles();

    // Handle the file selection event
    async Task FilesSelectedHandler(SelectedFile[] selectedFiles)
    {
    // example of opening a selected file...
        var selectedFile = selectedFiles[0];
        using (var fileStream = await fileSelect.OpenFileStreamAsync(selectedFile.Name))
        {
    // read from file stream here...
        }

    // alternatively, load all the bytes at once
        var fileBytes = await fileSelect.GetFileBytesAsync(selectedFile.Name);
        
    // or, get a retrieve the underlying blob url
        string fileBlobUrl = await fileSelect.GetFileBlobUrlAsync(selectedFile.Name);
    }
}